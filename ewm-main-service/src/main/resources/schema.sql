create TABLE IF NOT EXISTS users(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(250)                            NOT NULL,
    email VARCHAR(254)                            NOT NULL,
    CONSTRAINT PK_USER PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

create TABLE IF NOT EXISTS locations(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lon FLOAT                                   NOT NULL,
    lat FLOAT                                   NOT NULL,
    CONSTRAINT PK_LOCATIONS PRIMARY KEY (id)
);

create TABLE IF NOT EXISTS categories(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(50)                            NOT NULL,
    CONSTRAINT PK_CATEGORIES PRIMARY KEY (id),
    CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

create TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  initiator_id BIGINT NOT NULL,
  annotation VARCHAR(2000) NOT NULL,
  category_id BIGINT NOT NULL,
  description VARCHAR(7000) NOT NULL,
  event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  location_id BIGINT NOT NULL,
  paid BOOLEAN NOT NULL,
  participant_limit INT NOT NULL,
  request_moderation BOOLEAN NOT NULL,
  state VARCHAR(15),
  title VARCHAR(120) NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  published TIMESTAMP WITHOUT TIME ZONE,
  confirmed_requests BIGINT NOT NULL,
  views BIGINT,
  CONSTRAINT PK_EVENT PRIMARY KEY (id),
  CONSTRAINT FK_INITIATOR_ID FOREIGN KEY(initiator_id) REFERENCES users(id) ON delete CASCADE,
  CONSTRAINT FK_LOCATION FOREIGN KEY (location_id) REFERENCES locations(id) ON delete CASCADE,
  CONSTRAINT FR_CATEGORY FOREIGN KEY (category_id) REFERENCES categories(id) ON delete CASCADE
);

create TABLE IF NOT EXISTS requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  event_id BIGINT NOT NULL,
  requester_id BIGINT NOT NULL,
  status VARCHAR(15),
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  CONSTRAINT PK_REQUESTS PRIMARY KEY (id),
  CONSTRAINT FK_EVENT_ID FOREIGN KEY (event_id) REFERENCES events (id) ON delete CASCADE,
  CONSTRAINT FK_REQUESTOR_ID FOREIGN KEY (requester_id) REFERENCES users (id) ON delete CASCADE
);

create TABLE IF NOT EXISTS compilations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  is_pinned BOOLEAN NOT NULL,
  title VARCHAR(50) NOT NULL,
  CONSTRAINT PK_COMPILATION PRIMARY KEY (id)
);

create TABLE IF NOT EXISTS events_compilations (
  compilation_id BIGINT NOT NULL,
  event_id BIGINT NOT NULL,
  CONSTRAINT PK_EVENT_COMPILATION  PRIMARY KEY (compilation_id, event_id),
  CONSTRAINT FK_EVENT_COMPILATION_ID FOREIGN KEY (event_id) REFERENCES events (id) ON delete CASCADE,
  CONSTRAINT FK_COMPILATION_EVENT_ID FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON delete CASCADE
);